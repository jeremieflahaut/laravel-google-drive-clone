name: Tests

on:
  pull_request:
    branches: [ "main" ]

jobs:

  Build:
    runs-on: ubuntu-latest

    outputs:
      composer-cache-key: ${{ steps.composer-cache.outputs.key }}
      npm-cache-key: ${{ steps.npm-cache.outputs.key }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Install npm Dependencies
        run: npm install

      - name: Upload Composer Dependencies as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: composer-vendor
          path: vendor/

      - name: Upload npm Dependencies as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: npm-node-modules
          path: node_modules/

  Pint:
    needs: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Download Composer Dependencies Artifact
        uses: actions/download-artifact@v2
        with:
          name: composer-vendor
          path: vendor/

      - name: Download npm Dependencies Artifact
        uses: actions/download-artifact@v2
        with:
          name: npm-node-modules
          path: node_modules/

      - name: Launch Pint inspection
        run: vendor/bin/pint

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: PHP Linting (Pint)
          skip_fetch: true

  Tests:
    needs: Build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Download Composer Dependencies Artifact
        uses: actions/download-artifact@v2
        with:
          name: composer-vendor
          path: vendor/

      - name: Download npm Dependencies Artifact
        uses: actions/download-artifact@v2
        with:
          name: npm-node-modules
          path: node_modules/

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Compile assets
        run: npm run build

      - name: Execute tests (Unit and Feature tests) via Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/pest --coverage-clover clover.xml

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: false

      - name: Git push to badges branch
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          publish_dir: ./output
          publish_branch: badges
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
